// https://github.com/easyawslearn/Terraform-Tutorial/blob/master/aws-instance-first-script/Jenkinsfile
pipeline {

    parameters {
        string(name: 'environment', defaultValue: 'default', description: 'Workspace/environment file to use for deployment')
        booleanParam(name: 'autoApprove', defaultValue: false, description: 'Automatically run apply after generating plan?')

    }


//     environment {
//        AWS_ACCESS_ID = credentials('AWS_ACCESS_IDN')
//        AWS_SECRET_ID = credentials('AWS_SECRET_IDN')
//    }

   agent  any
        options {
                timestamps ()
                ansiColor('xterm')
            }
        stages {
        stage('checkout') {
            steps {
                 script
                        {
                            git "https://github.com/jagasworld/jagstechvideo.git"
                        }
                    }
                }

        stage('Plan') {
            steps {
//                sh 'pwd;cd /var/lib/jenkins/workspace/Sandbox/PL_Sandbox_Pipeline_JOB ; terraform init -input=false'
//                sh 'pwd;cd /var/lib/jenkins/workspace/Sandbox/PL_Sandbox_Pipeline_JOB ;terraform plan -input=false -out tfplan'
//                sh 'cd /var/lib/jenkins/workspace/Sandbox/PL_Sandbox_Pipeline_JOB ;terraform show -no-color tfplan > tfplan.txt'
                  sh 'hostname'
            }
        }
        stage('Approval') {
           when {
               not {
                   equals expected: true, actual: params.autoApprove
               }
           }

           steps {
               script {
                    def plan = readFile 'tfplan.txt'
                    input message: "Do you want to apply the plan?",
                    parameters: [text(name: 'Plan', description: 'Please review the plan', defaultValue: plan)]
               }
           }
       }

        stage('Apply') {
            steps {
                sh "pwd;cd  ;cd /var/lib/jenkins/workspace/Sandbox/PL_Sandbox_Pipeline_JOB; terraform apply -input=false tfplan"
            }
        }
    }
}
